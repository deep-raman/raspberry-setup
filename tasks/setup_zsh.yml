---

- name: Enter "{{ user }}" user's password
  pause:
    prompt: "Please enter {{ user }} user's password"
    echo: no
  register: password_prompt

- set_fact:
    userpass: "{{ password_prompt.user_input }}"

#- debug:
#    msg: "This is the user password : {{ userpass }}"

- name: OH-MY-ZSH | Download oh-my-zsh
  get_url:
    url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
    dest: "/home/{{ user }}/"
    mode: 0755

- name: OH-MY-ZSH | Install oh-my-zsh
  expect:
    command: "/home/{{ user }}/install.sh"
    #args:
      #chdir: /home/pi/
    #  executable: /bin/sh
    responses:
      'change your default shell to zsh': 'Y'
  ignore_errors: true
  register: zsh_output
  failed_when: "'Change your default shell manually' not in zsh_output.stdout"

- name: ZSH | Set zsh as default shell
  expect:
    command: /usr/bin/chsh -s /bin/zsh
    responses:
      Password: "{{ userpass }}"
    echo: yes

- name: BASH | Change .bashrc to load zsh
  blockinfile:
    dest: "/home/{{ user }}/.bashrc"
    insertafter: "^# for examples"
    marker: "#{mark} RASPBERRY SETUP : ANSIBLE MANAGED BLOCK"
    state: present
    backup: yes
    block: |
      if test -t 1; then
        exec zsh
      fi

- name: ZSH | Change theme to agnoster
  lineinfile:
    dest: "/home/{{ user }}/.zshrc"
    regexp: '^ZSH_THEME'
    line: 'ZSH_THEME="agnoster"'
    state: present
    backup: yes

- name: ZSH | Clone powerline fonts repo
  git:
    repo: 'git@github.com:deep-raman/fonts.git'
    dest: "/home/{{ user }}/fonts"

- name: ZSH | Install fonts
  command: "/home/{{ user }}/fonts/install.sh"

- name: Delete fonts repo
  file:
    path: "/home/{{ user }}/fonts"
    state: absent

- name: ZSH | Download zsh-autosuggestions plugin
  git:
    repo: 'https://github.com/deep-raman/zsh-autosuggestions'
    dest: "/home/{{ user }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions"

- name: ZSH | Download zsh-syntax-highlighting plugin
  git:
    repo: 'https://github.com/deep-raman/zsh-syntax-highlighting'
    dest: "/home/{{ user }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"

- name: ZSH | Remove default plugins list in .zshrc
  lineinfile:
    dest: "/home/{{ user }}/.zshrc"
    regexp: '^plugins'
    state: absent
    backup: yes
  tags: plugin-update

- name: ZSH | Update plugins list in .zshrc
  blockinfile:
    dest: "/home/{{ user }}/.zshrc"
    insertafter: "^# Add wisely"
    marker: "#{mark} RASPBERRY SETUP : ANSIBLE MANAGED BLOCK"
    state: present
    backup: yes
    block: |
      plugins=(
        git
        pip
        sudo
        docker
        fabric
        python
        ansible
        virtualenv
        vim-interaction
        virtualenvwrapper
        zsh-autosuggestions
        zsh-syntax-highlighting
      )
  tags: plugin-update

- import_tasks: setup_powerlevel10k.yml
  when: powerlevel10k == True
  become: no
  tags: powerlevel10k
